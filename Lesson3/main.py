"""
    Работа со строками. Строки - массив символом, поэтому с ними
    можно работать как с массивами. Например, выводить каждый символ отдельно.
    Например, так:
"""
a = "Hello, World!"
for elem in a:
    print(elem)

# Или так:

for i in range(len(a)):
    print(a[i])

# Функция list() преобразует строкув массив:

b = list(a)
print(b)

# Вывод: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'W', 'o', 'r', 'l', 'd', '!']

"""
    Методы split и join. split() превращает строку в массив, разбивая её
    по какому-нибудь символу. Если split() стоит без параметров, то он разделит строку
    по пробелам.
    
    join наоборот соединяет массив в строку по заданному разделителю.
    
    Примеры:
"""

# split():

a = "Всем привет! Я снова здесь"
b = a.split()
print(b)
# Вывод: ['Всем', 'привет!', 'Я', 'снова', 'здесь']

# join():

c = '-'.join(b)
print(c)
# Вывод: Всем-привет!-Я-снова-здесь

"""
    Функция int() может также из любой системы счисления перводить
    в десятичную. Мы пишем число, затем пишем основание системы счисления, в которой
    записано это число. Пример:
"""


a = "201"  # Число в троичной системе счисления, поэтому в следующей строке как второй аргумент написано 3
print(int(a, 3))  # Вывод: 19

# Есть также функции для перевода в двоичную, восьмеричную и шестнадцатеричную системы счисления:

a = 10
print(bin(a))  # Вывод: 0b1010 (двоичная система
print(oct(a))  # Вывод: 0o12 (восьмеричная система)
print(hex(a))  # Вывод: 0xa (шестнадцатеричная система)

"""
    Оператор in - показывает, есть ли в массиве или другой структуре данных
    какой-то элемент.
"""

sp = [3, 1, 6, 8, 3, 5, 9, 2, "sfefs", 'q']
if "sfefs" in sp:  # Если элемент "sfefs" есть в мааисве sp, то печатаем "Есть!"
    print("Есть!")
else:
    print("Нет!")  # Ну и соответственно если нет, то печатаем "Нет!"


s = "Abcdef"
if "c" in s:  # Если буква "c" есть в строке s, то печатаем "Есть!"
    print(True)
